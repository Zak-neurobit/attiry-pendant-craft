-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.addresses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  name text NOT NULL,
  line1 text NOT NULL,
  line2 text,
  city text NOT NULL,
  state text NOT NULL,
  zip text NOT NULL,
  country text NOT NULL DEFAULT 'US'::text,
  is_default boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT addresses_pkey PRIMARY KEY (id),
  CONSTRAINT addresses_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.admin_initialization (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  initialization_token text NOT NULL UNIQUE,
  used boolean NOT NULL DEFAULT false,
  expires_at timestamp with time zone NOT NULL DEFAULT (now() + '01:00:00'::interval),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT admin_initialization_pkey PRIMARY KEY (id)
);
CREATE TABLE public.alerts_config (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  metric text NOT NULL,
  comparator text NOT NULL CHECK (comparator = ANY (ARRAY['>'::text, '<'::text, '>='::text, '<='::text, '='::text])),
  threshold numeric NOT NULL,
  channel text DEFAULT 'email'::text CHECK (channel = ANY (ARRAY['email'::text, 'slack'::text])),
  frequency text DEFAULT 'daily'::text CHECK (frequency = ANY (ARRAY['hourly'::text, 'daily'::text, 'weekly'::text])),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT alerts_config_pkey PRIMARY KEY (id)
);
CREATE TABLE public.alerts_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  alert_id uuid NOT NULL,
  triggered_at timestamp with time zone DEFAULT now(),
  metric_value numeric,
  sent boolean DEFAULT false,
  CONSTRAINT alerts_log_pkey PRIMARY KEY (id),
  CONSTRAINT alerts_log_alert_id_fkey FOREIGN KEY (alert_id) REFERENCES public.alerts_config(id)
);
CREATE TABLE public.analytics_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type text NOT NULL,
  event_data jsonb,
  user_id uuid,
  session_id text,
  ip_address text,
  user_agent text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT analytics_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.api_keys (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  key_hash text NOT NULL UNIQUE,
  key_preview text NOT NULL,
  permissions ARRAY NOT NULL DEFAULT ARRAY['read'::text],
  last_used timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  is_active boolean NOT NULL DEFAULT true,
  created_by uuid CHECK (created_by IS NOT NULL),
  CONSTRAINT api_keys_pkey PRIMARY KEY (id),
  CONSTRAINT api_keys_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.api_usage_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  api_key_id uuid,
  endpoint text NOT NULL,
  method text NOT NULL,
  ip_address text,
  user_agent text,
  response_status integer,
  response_time_ms integer,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT api_usage_logs_pkey PRIMARY KEY (id),
  CONSTRAINT api_usage_logs_api_key_id_fkey FOREIGN KEY (api_key_id) REFERENCES public.api_keys(id)
);
CREATE TABLE public.design_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  email text NOT NULL,
  description text NOT NULL,
  image_url text,
  delivery_date date,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT design_requests_pkey PRIMARY KEY (id)
);
CREATE TABLE public.events (
  id bigint NOT NULL DEFAULT nextval('events_id_seq'::regclass),
  session_id uuid NOT NULL,
  user_id uuid,
  event text NOT NULL CHECK (event = ANY (ARRAY['page_view'::text, 'product_view'::text, 'image_view'::text, 'image_click'::text, 'add_to_cart'::text, 'begin_checkout'::text, 'purchase'::text])),
  page text,
  product_id uuid,
  image_id uuid,
  amount numeric,
  extras jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT events_pkey PRIMARY KEY (id),
  CONSTRAINT events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT events_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.loyalty_points (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  points integer DEFAULT 0,
  tier text DEFAULT 'bronze'::text CHECK (tier = ANY (ARRAY['bronze'::text, 'silver'::text, 'gold'::text])),
  total_spent numeric DEFAULT 0,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT loyalty_points_pkey PRIMARY KEY (id),
  CONSTRAINT loyalty_points_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.order_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id uuid NOT NULL,
  product_id uuid NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  unit_price numeric NOT NULL,
  color_variant USER-DEFINED NOT NULL DEFAULT 'gold'::color_variant,
  custom_text text CHECK (length(custom_text) <= 12),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  font_choice text,
  chain_type text,
  CONSTRAINT order_items_pkey PRIMARY KEY (id),
  CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  customer_email text NOT NULL,
  customer_name text NOT NULL,
  shipping_address jsonb NOT NULL,
  subtotal numeric NOT NULL,
  discount_amount numeric DEFAULT 0,
  total numeric NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::order_status,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  shipping_cost numeric DEFAULT 0,
  gateway_fee numeric DEFAULT 0,
  ad_spend numeric DEFAULT 0,
  CONSTRAINT orders_pkey PRIMARY KEY (id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  description text,
  price numeric NOT NULL,
  stock integer NOT NULL DEFAULT 0,
  sku text UNIQUE,
  image_urls ARRAY,
  color_variants ARRAY DEFAULT ARRAY['gold'::color_variant],
  keywords ARRAY,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  compare_price numeric DEFAULT 0,
  chain_types ARRAY DEFAULT ARRAY[]::text[],
  fonts ARRAY DEFAULT ARRAY[]::text[],
  meta_title text DEFAULT ''::text,
  meta_description text DEFAULT ''::text,
  tags ARRAY DEFAULT ARRAY[]::text[],
  cogs numeric DEFAULT 0,
  slug text,
  rating numeric DEFAULT 5.0,
  review_count integer DEFAULT 0,
  category text,
  is_new boolean DEFAULT false,
  is_featured boolean DEFAULT false,
  featured_order integer DEFAULT 0,
  CONSTRAINT products_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  email text NOT NULL CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  first_name text,
  last_name text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  phone text,
  birthday date,
  is_blocked boolean DEFAULT false,
  tags ARRAY DEFAULT ARRAY[]::text[],
  notes text,
  favourites ARRAY DEFAULT ARRAY[]::text[],
  CONSTRAINT profiles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.referrals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  referrer_id uuid NOT NULL,
  referred_id uuid,
  referral_code text NOT NULL UNIQUE,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'completed'::text, 'rewarded'::text])),
  reward_issued boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT referrals_pkey PRIMARY KEY (id),
  CONSTRAINT referrals_referrer_id_fkey FOREIGN KEY (referrer_id) REFERENCES auth.users(id),
  CONSTRAINT referrals_referred_id_fkey FOREIGN KEY (referred_id) REFERENCES auth.users(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid NOT NULL,
  user_id uuid,
  order_id uuid,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment text,
  images ARRAY DEFAULT ARRAY[]::text[],
  verified boolean DEFAULT false,
  helpful integer DEFAULT 0,
  not_helpful integer DEFAULT 0,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT reviews_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT reviews_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.security_audit_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  action text NOT NULL,
  resource text,
  details jsonb,
  ip_address text,
  user_agent text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT security_audit_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.site_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  key text NOT NULL UNIQUE CHECK (key ~ '^[a-z0-9_]+$'::text AND length(key) <= 100),
  value jsonb NOT NULL,
  description text,
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT site_settings_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_behavior (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  viewed_products ARRAY DEFAULT ARRAY[]::uuid[],
  preferences jsonb DEFAULT '{}'::jsonb,
  recent_searches ARRAY DEFAULT ARRAY[]::text[],
  currency text DEFAULT 'USD'::text,
  locale text DEFAULT 'en'::text,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_behavior_pkey PRIMARY KEY (id),
  CONSTRAINT user_behavior_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_roles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  role USER-DEFINED NOT NULL DEFAULT 'user'::app_role,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_roles_pkey PRIMARY KEY (id)
); 